// Generated by cra-context-generator@1.0.0 on Thu, 28 Apr 2022 14:52:09 GMT.
// Do not edit this file manually unless you disabled its code generation.
import React from 'react';
import ReactDOM from 'react-dom';
import { Router, Route, useHistory } from 'react-router-dom';
import { History, Location } from 'history';
import { AppContextProvider, IAppState, AppState, DefaultAppState } from './appContext';
import { createChildren, getHistory, deserializePathname, serializePathname } from './contextBuilderUtils';

/**
 * The App context interface.
 */
export interface IAppContext {
    /**
     * The component to be rendered.
     */
    Component: () => JSX.Element;

    /**
     * Renderes the component.
     *
     * @param {Element | DocumentFragment | null} container The container. Optional parameter.
     */
    render: (container: Element | DocumentFragment | null) => void;

    /**
     * Gets the language.
     */
    getLanguage: () => string;

    /**
     * Sets the language.
     */
    setLanguage: (language: string) => void;

    /**
     * Gets the theme.
     */
    getTheme: () => string;

    /**
     * Sets the theme.
     */
    setTheme: (theme: string) => void;
};

export interface IComponentProps  {
    children: React.ReactNode;
    appState: IAppState;
    language?: string;
    languageUrlParam?: string;
    languageSetEventHandler?: (language: string) => void;
    theme?: string;
    themeUrlParam?: string;
    themeSetEventHandler?: (theme: string) => void;
};

/**
 * The App context builder.
 * Helps to build the App context and manage its state.
 */
export class AppContextBuilder {
    private props: IComponentProps  = {
        children: undefined,
        appState: DefaultAppState,
        language: undefined,
        languageUrlParam: undefined,
        languageSetEventHandler: undefined,
        theme: undefined,
        themeUrlParam: undefined,
        themeSetEventHandler: undefined,
    };

    build() {
    };

    const Component = () => (
        <Router history={getHistory()}>
            <Route>
                <RouteComponent />
            </Route>
        </Router>
    );

    const render = (container: Element | DocumentFragment | null) =>
        ReactDOM.render(
            <React.StrictMode>
                <Component />
            </React.StrictMode>,
            container || document.createElement('div')
        );
};
