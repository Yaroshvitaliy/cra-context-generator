// Generated by cra-context-generator@1.3.0 on Sun, 24 Jul 2022 08:55:45 GMT.
// Do not edit this file manually unless you disabled its code generation.
import React from 'react';

/**
 * The Dashboard context provider props interface.
 */
export interface IDashboardContextProviderProps {
    children: React.ReactNode;
}

/**
 * The Dashboard context value interface.
 */
export interface IDashboardContextValue {
    injections: any[];
    setInjections: (injections: any[]) => void;
}

export const DefaultInjections = [];

/**
 * The default Dashboard context value.
 */
export const DefaultDashboardContextValue: IDashboardContextValue = {
    injections: DefaultInjections,
    setInjections: (injections: any[]) => {},
};

/**
 * The Dashboard context.
 * The DefaultDashboardContextValue argument is only used when a component does not have a matching Provider above it in the tree.
 * This can be helpful for testing components.
 */
export const DashboardContext = React.createContext<IDashboardContextValue>(DefaultDashboardContextValue);

/**
 * The Dashboard context provider.
 */
export const DashboardContextProvider = ({
            children,
        }: IDashboardContextProviderProps) => {

    const [ injectionsState, setInjectionsState ] = React.useState<any[]>(DefaultInjections);
    const contextValue: IDashboardContextValue = {
        injections: injectionsState,
        setInjections: (injections: any[]) => setInjectionsState(injections),
    };

    return (
        <DashboardContext.Provider value={contextValue}>
            {children}
        </DashboardContext.Provider>
    );
};
