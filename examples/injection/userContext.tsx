// Generated by cra-context-generator@1.3.0 on Fri, 03 Feb 2023 07:54:03 GMT.
// Do not edit this file manually unless you disabled its code generation.
import React from 'react';

/**
 * The User context provider props interface.
 */
export interface IUserContextProviderProps {
    children: React.ReactNode;
}

/**
 * The User context value interface.
 */
export interface IUserContextValue {
    currentUser?: any;
    setCurrentUser: (currentUser?: any) => void;
}

export const DefaultCurrentUser = null;

/**
 * The default User context value.
 */
export const DefaultUserContextValue: IUserContextValue = {
    currentUser: DefaultCurrentUser,
    setCurrentUser: (currentUser?: any) => {},
};

/**
 * The User context.
 * The DefaultUserContextValue argument is only used when a component does not have a matching Provider above it in the tree.
 * This can be helpful for testing components.
 */
export const UserContext = React.createContext<IUserContextValue>(DefaultUserContextValue);

/**
 * The User context provider.
 */
export const UserContextProvider = ({
            children,
        }: IUserContextProviderProps) => {

    const [ currentUserState, setCurrentUserState ] = React.useState<any>(DefaultCurrentUser);
    const contextValue: IUserContextValue = {
        currentUser: currentUserState,
        setCurrentUser: (currentUser?: any) => setCurrentUserState(currentUser),
    };

    return (
        <UserContext.Provider value={contextValue}>
            {children}
        </UserContext.Provider>
    );
};
